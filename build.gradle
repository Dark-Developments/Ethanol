plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    flatDir {
        dirs 'lib'
    }

    mavenCentral()
    maven { url "https://maven.meteordev.org/releases"}
    maven { url "https://maven.meteordev.org/snapshots" }

    maven { url 'https://jitpack.io' }

    mavenCentral()
}

configurations {
    implementation.extendsFrom(library)
    shadow.extendsFrom(library)

    libImpl
}

dependencies {
    // Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Meteor
    modImplementation "meteordevelopment:meteor-client:${project.meteor_version}"

    compileOnly(group: "org.projectlombok", name: "lombok", version: "1.18.24")
    annotationProcessor(group: "org.projectlombok", name: "lombok", version: "1.18.24")
    implementation(group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13')

    libImpl(name: "EthanolAPI");

    configurations.libImpl.dependencies.each {
        implementation(it)
//		include(it)
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }

    from {
        configurations.libImpl.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version,
            "mc_version": project.minecraft_version,
            "gh_hash": (System.getenv("GITHUB_SHA") ?: "")
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding("UTF-8")
}
